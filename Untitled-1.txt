var knex = require('./Postgres_player.js').knex;
var _ = require('lodash');
var Promise = require('bluebird')


function Match_Schedule() {
    Load_Data_From_Database()
    .then(function(player_details)
{
   // console.log(player_details)
  return _.groupBy(player_details,'group_id')
})
.then(function(sorted_by_groups)
{
    //console.log(sorted_by_groups)
    var groups = Object.values(sorted_by_groups)
  console.log(_.isNull(groups))
     return Promise.each(groups, function(group){
       // console.log(_.groupBy(group,'category_id'))
         return _.groupBy(group,'category_id')
//console.log(group,"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
      //  console.log(_.pick(sorted_by_groups, group))
    // return _.groupBy(_.pick(sorted_by_groups, group),category_id)
    })
    })
    .then(function(sorted_by_categories)
{
    // console.log(sorted_by_categories)
     var categories = Object.values(sorted_by_categories)
     return Promise.each(categories, function(category){
         return _.groupBy(category,'gender')
//console.log(group,"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa")
      //  console.log(_.pick(sorted_by_groups, group))
    // return _.groupBy(_.pick(sorted_by_groups, group),category_id)
    })
   // console.log("c",sorted_by_categories)
//     var categories = Object.keys(sorted_by_categories)
//     console.log(categories)
//      Promise.each(categories, function(category){
//         console.log(_.pick(sorted_by_categories, category))
//      return _.groupBy(_.pick(sorted_by_categories, category),gender)
//     })
})
.then(function(sorted_by_gender)
{
     var gender = Object.values(sorted_by_categories)
     return Promise.each(categories, function(category){
         return _.groupBy(category,'gender')
})

}
//         .then(function (player_details) {
//             //  console.log(player_details)
//             knex('game_category_details')
//                 .select()
//                 .then(function (Category) {
//                     Promise.each(Category, function (Category_ID) {  // [{catID, gameID, catName}]
//                         Promise.map(['M', 'F'], function (Gender) { // ['M','F']
//                             return _.filter(player_details, // [{playerID, groupID, catID, gameID, gender}]
//                                 function (p) {
//                                     return ((p.category_id == Category_ID.category_id)
//                                         && (p.gender == Gender))
//                                 })
//                         }).then(function (data) {
//                             console.log("d",data)
//                           return _.pick(data, _.isEmpty);
//                         }).then(function (data) {
                    
//                                console.log("daaaaaaaaaaaaaaaa",data)
                
//                                // console.log(data, 'DATA');
//                                 console.log("#$%^&*($#@!#$%^&*(*&^%$#@")
//                             })
//                     })
//                 })
//         })
// }


Match_Schedule();

function Make_Match(category_id, players) {
    console.log(category_id)
    console.log(players)

}

function Load_Data_From_Database() {
    return knex.from('interest_details')
        .innerJoin('player_details', 'interest_details.player_id', 'player_details.player_id')
        .select('interest_details.player_id', 'group_id', 'game_id', 'category_id', 'gender')
}

